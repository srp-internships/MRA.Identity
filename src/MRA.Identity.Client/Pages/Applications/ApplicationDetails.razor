@page "/Application/details/{Slug}"
@using MRA.Identity.Application.Contract.Applications.Responses
@using MRA.Identity.Client.Pages.Applications.Components
@using MRA.Identity.Client.Services.Applications
@using MRA.Identity.Application.Contract.Applications.Commands
@inject IApplicationsService ApplicationsService
@inject IDialogService DialogService

<Header></Header>
<CascadingAuthenticationState>
    <AuthorizeView Roles="SuperAdmin">
        @if (_application != null)
        {
            <MudGrid>
                <MudItem xs="12" lg="6">
                    <MudCard>
                        <MudCardContent>
                            <MudStack AlignItems="AlignItems.Start" Justify="Justify.FlexStart" Spacing="2" Row="false">
                                <MudTextField ReadOnly="true" Value="_application.Id" Label="Id" FullWidth="true"></MudTextField>
                                <MudTextField ReadOnly="true" Value="_application.Name" Label="Name" FullWidth="true"></MudTextField>
                                <MudTextField ReadOnly="true" Value="_application.Description" Label="Description" FullWidth="true"></MudTextField>
                                <MudTextField ReadOnly="true" Value="_application.IsProtected" Label="Protected?" FullWidth="true"></MudTextField>
                                <MudTextField ReadOnly="true" Value="_application.ClientSecret" Label="Secret" FullWidth="true"></MudTextField>
                            </MudStack>
                            <br><br>
                            <MudDivider/>
                            <br>
                            <MudStack Row="true">
                                <div></div><MudSpacer/>
                                <br>
                                <MudButton StartIcon="@Icons.Material.Filled.Cyclone" IconSize="Size.Large" Size="Size.Large">Regenerate secret</MudButton>
                                <MudButton StartIcon="@Icons.Material.Filled.Edit" IconSize="Size.Large" Size="Size.Large" OnClick="@(ShowUpdateDialog)">Edit</MudButton>
                                <MudButton StartIcon="@Icons.Material.Filled.Delete" IconColor="Color.Error" IconSize="Size.Large" Size="Size.Large" OnClick="@(ShowDeleteDialog)">Remove</MudButton>
                                <br>
                            </MudStack>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            </MudGrid>
        }
        else
        {
            <h2>application is not found</h2>
        }
    </AuthorizeView>
</CascadingAuthenticationState>

@code
{
    [Parameter] public string Slug { get; set; }
    private ApplicationResponse _application = null!;

    protected override async Task OnInitializedAsync()
    {
        _application = await ApplicationsService.GetAsync(Slug);
    }

    private async Task ShowUpdateDialog()
    {
        await DialogService.ShowAsync<UpdateApplicationsDialog>("Update", new DialogParameters
        {
            {
                "Command", new UpdateApplicationCommand
                {
                    Slug = _application.Slug,
                    Name = _application.Name,
                    Description = _application.Description,
                    CallbackUrls = _application.CallbackUrls,
                    IsProtected = _application.IsProtected
                }
            }
        }, new DialogOptions { MaxWidth = MaxWidth.Small, FullWidth = true });
    }

    private async Task ShowDeleteDialog()
    {
        await DialogService.ShowAsync<DeleteApplicationsDialog>("Delete",
            new DialogParameters { { "Slug", Slug } }, new DialogOptions() { FullWidth = true, MaxWidth = MaxWidth.Small });
    }
}