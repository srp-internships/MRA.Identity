@page "/logout"
@using MRA.Identity.Client.Services.HttpClients
@using Microsoft.AspNetCore.WebUtilities
@inject IAltairCABlazorCookieUtil cookieUtil
@inject NavigationManager navigationManager
@inject IConfiguration configuration
@inject IHttpClientFactory factory;


@code {
    protected override async Task OnInitializedAsync()
    {
        await cookieUtil.RemoveAsync("authToken");
        var addressesToLogout = configuration.GetSection("Platforms").Get<string[]>();

        try
        {
            await Task.WhenAll(addressesToLogout.Select(s =>
            {
                using var client = factory.CreateClient();
                var request = new HttpRequestMessage(HttpMethod.Get, $"{s}/logout");
                request.SetBrowserRequestMode(BrowserRequestMode.NoCors);
                request.SetBrowserRequestCache(BrowserRequestCache.NoStore);
                return client.SendAsync(request);
            }));
        }
        catch { }

        var currentUri = navigationManager.ToAbsoluteUri(navigationManager.Uri);
        if (QueryHelpers.ParseQuery(currentUri.Query).TryGetValue("callback", out var callBackUrl))
            navigationManager.NavigateTo(callBackUrl);
        else
            navigationManager.NavigateTo("/");
    }
}
